<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
<!-- 
[Aspectj의 Pointcut 표현식]
execution(Integer kr.spring.ch01..WriteArticleService.write(..))
: 리턴 타입이 Integer인 WriteArticleService의 write() 메서드 호출(검색)

execution(public void set*(..))
: 리턴 타입이 void이고, 메서드 이름이 set으로 시작하며, 파라미터가 0개 이상인 메서드 호출(검색)

execution(* kr.spring.ch01.*.*())
: kr.spring.ch01 패키지지의 파라미터가 없는 모든 메서드 호출(검색)

execution(* get*(*))
: 이름이 get으로 시작하고 1개의 파라미터를 갖는 메서드 호출(검색)

execution(* get*(*,*))
: 이름이 get으로 시작하고 2개의 파라미터를 갖는 메서드 호출(검색)

execution(* read*(Integer,..))
: 메서드 이름이 read로 시작하고, 첫 번째 파라미터 타입이 Integer이며, 1개 이상의 파라미터를 갖는 메서드 호출(검색)
 -->

	<!-- 어노테이션 방식으로 AOP를 구현할 때 반드시 명시 -->
	<aop:aspectj-autoproxy/>

	<!-- 공통 기능을 갖고 있는 클래스 bean객체 생성 -->
	<bean id="myFirstAspect" class="kr.spring.ch22.MyFirstAspect"/>
	
	<!-- 핵심 기능을 갖고 있는 클래스 bean객체 생성 -->
	<bean id="product" class="kr.spring.product.Product"/>

</beans>
