<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.talk.dao.TalkMapper">

	<resultMap type="talkRoomVO" id="talkMap">
		<!-- talkVO안의 message를 message라는 컬럼에 매핑하라 -->
		<result property="talkVO.message" column="message"/>
		<result property="talkVO.chat_date" column="chat_date"/>
		<result property="talkMemberVO.room_name" column="room_name"/>
	</resultMap>
	
	<sql id="talkSub">
		FROM sptalkroom r JOIN sptalk_member m USING(talkroom_num) 
			   LEFT OUTER JOIN (SELECT talkroom_num,
			   						   mem_num,
			   						   COUNT(*) room_cnt 
			   					FROM sptalk_read <!-- 읽지 않은 메시지 -->
			   					WHERE mem_num=#{mem_num} 
			   					GROUP BY talkroom_num,mem_num
			   					) e 
			   	USING(talkroom_num) 
			   LEFT OUTER JOIN (SELECT talk_num,
			   						   <![CDATA[
			   						   REPLACE(REPLACE(REPLACE(message,'<','&lt;'),'>','&gt;'),'@{member}@','') message,
			   					  	   ]]> <!-- 태그 불허 및 초대 식별 문구 지우기 -->
			   						   chat_date,
			   						   talkroom_num 
			   					FROM sptalk
			   					WHERE talk_num IN (SELECT MAX(talk_num) talk_num 
			   									   FROM sptalk 
			   									   GROUP BY talkroom_num)
			   				   ) 
			    USING(talkroom_num) 
		WHERE m.mem_num=#{mem_num} 
		<if test="keyword != null and keyword != ''">
		AND room_name LIKE '%' || #{keyword} || '%'
		</if>
	</sql>

	<!-- 전체or검색 채팅방 레코드 수 -->
	<select id="selectRowCount" parameterType="map" resultType="integer">
		SELECT COUNT(*) 
		<include refid="talkSub"></include>
	</select>
	
	<!-- 전체or검색 채팅방 목록 -->
	<select id="selectTalkRoomList" parameterType="map" resultMap="talkMap">
		SELECT * 
		FROM (SELECT a.*, rownum rnum 
			  FROM (SELECT * 
			  		<include refid="talkSub"></include> 
			  		ORDER BY (CASE 
			  				  WHEN chat_date IS NULL 
			  				  THEN talkroom_date 
			  				  ELSE chat_date 
			  				  END) DESC)a) 
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
	<!-- 채팅 멤버 읽기 -->
	<select id="selectTalkMember" parameterType="integer" resultType="talkMemberVO">
		SELECT mem_num,
			   id,
			   room_name 
		FROM sptalk_member JOIN spmember USING (mem_num) 
		WHERE talkroom_num = #{talkroom_num}
	</select>
	
	<!-- 채팅 메시지 등록 -->
	<insert id="insertTalk" parameterType="talkVO">
		INSERT INTO sptalk(
			talk_num,
			talkroom_num,
			mem_num,
			message
			)
		VALUES(
			#{talk_num},
			#{talkroom_num},
			#{mem_num},
			#{message}
			)
	</insert>
	
	<!-- 채팅 메시지 읽기 -->
	<select id="selectTalkDetail" parameterType="integer" resultType="talkVO">
		SELECT 
			<![CDATA[
			REPLACE(REPLACE(message,'<','&lt;'),'>','&gt;') message,
			]]> <!--html 불허-->
			chat_date,
			read_count,
			mem_num,
			id 
		FROM sptalk 
			 LEFT OUTER JOIN (SELECT talk_num, COUNT(*) read_count 
							  FROM sptalk_read GROUP BY talk_num)
			  USING (talk_num) 
			 JOIN spmember
			  USING (mem_num)				 <!--멤버 등록일(채팅 참여일) 이후의 정보(메시지)만 읽어옴-->
		WHERE talkroom_num = #{talkroom_num} AND chat_date >= (SELECT member_date 
															   FROM sptalk_member 
															   WHERE talkroom_num = #{talkroom_num} 
															   AND mem_num = #{mem_num}) 
		ORDER BY chat_date ASC
	</select>
</mapper>